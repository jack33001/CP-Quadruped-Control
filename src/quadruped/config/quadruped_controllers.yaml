controller_manager:
  ros__parameters:
    update_rate: 1000  # Hz

    # -------------------------------------------------- Instantiate the controllers  -------------------------------------------------- 
    # Joint state broadcaster publishes the joint states of the robot
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    # IMU sensor publishes the IMU data for the robot
    imu_sensor_controller:
      type: imu_sensor_broadcaster/IMUSensorBroadcaster

  # Position controllers for each leg
    position_controller_fr_leg:
      type: position_controllers/JointGroupPositionController
      effort_limit: 8
    position_controller_fl_leg:
      type: position_controllers/JointGroupPositionController
      effort_limit: 8
    position_controller_rr_leg:
      type: position_controllers/JointGroupPositionController
      effort_limit: 8
    position_controller_rl_leg:
      type: position_controllers/JointGroupPositionController
      effort_limit: 8

  # Velocity controllers for each leg
    velocity_controller_fr_leg:
      type: velocity_controllers/JointGroupVelocityController
      effort_limit: 8
    velocity_controller_fl_leg:
      type: velocity_controllers/JointGroupVelocityController
      effort_limit: 8
    velocity_controller_rr_leg:
      type: velocity_controllers/JointGroupVelocityController
      effort_limit: 8
    velocity_controller_rl_leg:
      type: velocity_controllers/JointGroupVelocityController
      effort_limit: 8

  # Effort controllers for each leg
    effort_controller_fr_leg:
      type: effort_controllers/JointGroupEffortController
      effort_limit: 8
    effort_controller_fl_leg:
      type: effort_controllers/JointGroupEffortController
      effort_limit: 8
    effort_controller_rr_leg:
      type: effort_controllers/JointGroupEffortController
      effort_limit: 8
    effort_controller_rl_leg:
      type: effort_controllers/JointGroupEffortController
      effort_limit: 8

  # Position trajectory controllers for each leg
    position_trajectory_controller_fr_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8
    position_trajectory_controller_fl_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8
    position_trajectory_controller_rr_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8
    position_trajectory_controller_rl_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8

  # Effort trajectory controllers for each leg
    effort_trajectory_controller_fr_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8
    effort_trajectory_controller_fl_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8
    effort_trajectory_controller_rr_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8
    effort_trajectory_controller_rl_leg:
      type: joint_trajectory_controller/JointTrajectoryController
      effort_limit: 8

  # -------------------------------------------------- Configure the controllers  --------------------------------------------------
# Configure the joint state broadcaster
joint_state_broadcaster:
  ros__parameters:
    publish_rate: 1000

# Assign joint names to the position controllers
position_controller_fr_leg:
  ros__parameters:
    joints: 
      - "fr_hip"
      - "fr_knee"

position_controller_fl_leg:
  ros__parameters:
    joints: 
      - "fl_hip"
      - "fl_knee"
position_controller_rr_leg:
  ros__parameters:
    joints: 
      - "rr_hip"
      - "rr_knee"
position_controller_rl_leg:
  ros__parameters:
    joints: 
      - "rl_hip"
      - "rl_knee"

# Assign joint names to the velocity controllers
velocity_controller_fr_leg:
  ros__parameters:
    joints: 
      - "fr_hip"
      - "fr_knee"
velocity_controller_fl_leg:
  ros__parameters:
    joints: 
      - "fl_hip"
      - "fl_knee"
velocity_controller_rr_leg:
  ros__parameters:
    joints: 
      - "rr_hip"
      - "rr_knee"
velocity_controller_rl_leg:
  ros__parameters:
    joints: 
      - "rl_hip"
      - "rl_knee"

# Assign joint names to the effort controllers
effort_controller_fr_leg:
  ros__parameters:
    joints: 
      - "fr_hip"
      - "fr_knee"
effort_controller_fl_leg:
  ros__parameters:
    joints: 
      - "fl_hip"
      - "fl_knee"
effort_controller_rr_leg:
  ros__parameters:
    joints: 
      - "rr_hip"
      - "rr_knee"
effort_controller_rl_leg:
  ros__parameters:
    joints: 
      - "rl_hip"
      - "rl_knee"

# Configure the trajectory controllers
position_trajectory_controller_fr_leg:
  ros__parameters:
    joints:
      - "fr_hip"
      - "fr_knee"
    command_interfaces: 
      - "position"
    state_interfaces:
      - "position"
    
position_trajectory_controller_fl_leg:
  ros__parameters:
    joints:
      - "fl_hip"
      - "fl_knee"
    command_interfaces: 
      - "position"
    state_interfaces:
      - "position"

position_trajectory_controller_rr_leg:
  ros__parameters:
    joints:
      - "rr_hip"
      - "rr_knee"
    command_interfaces: 
      - "position"
    state_interfaces:
      - "position"

position_trajectory_controller_rl_leg:
  ros__parameters:
    joints:
      - "rl_hip"
      - "rl_knee"
    command_interfaces: 
      - "position"
    state_interfaces:
      - "position"

  # Configure the trajectory controllers
effort_trajectory_controller_fr_leg:
  ros__parameters:
    joints:
      - "fr_hip"
      - "fr_knee"
    command_interfaces: 
      - "effort"
    state_interfaces:
      - "position"
      - "velocity"
    
effort_trajectory_controller_fl_leg:
  ros__parameters:
    joints:
      - "fl_hip"
      - "fl_knee"
    command_interfaces: 
      - "effort"
    state_interfaces:
      - "position"
      - "velocity"

effort_trajectory_controller_rr_leg:
  ros__parameters:
    joints:
      - "rr_hip"
      - "rr_knee"
    command_interfaces: 
      - "effort"
    state_interfaces:
      - "position"
      - "velocity"

effort_trajectory_controller_rl_leg:
  ros__parameters:
    joints:
      - "rl_hip"
      - "rl_knee"
    command_interfaces: 
      - "effort"
    state_interfaces:
      - "position"
      - "velocity"

  # Configure the IMU sensor controller
imu_sensor_controller:
      ros__parameters:
        sensor_name: imu_sensor
        frame_id: imu_link